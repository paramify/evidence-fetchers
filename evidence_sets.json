{
  "evidence_sets": {
    "aws_component_ssl_enforcement": {
      "id": "EVD-AWS-SSL-ENFORCEMENT",
      "name": "AWS Component SSL Enforcement",
      "description": "Evidence for SSL/TLS enforcement across AWS components including S3 buckets and RDS instances",
      "service": "AWS",
      "instructions": "Script: aws_component_ssl_enforcement_status.sh. Commands executed: aws s3api list-buckets, aws s3api get-bucket-policy, aws rds describe-db-instances, aws rds describe-db-parameters",
      "validationRules": [
        {
          "id": 1,
          "regex": "\"s3_total\":\\s*(?P<s3_total>\\d+)[\\s\\S]*?\"s3_ssl_enforced\":\\s*(?P<s3_ssl_enforced>\\d+)",
          "logic": "IF s3_total == s3_ssl_enforced THEN PASS"
        },
        {
          "id": 2,
          "regex": "\"rds_total\":\\s*(?P<rds_total>\\d+)[\\s\\S]*?\"rds_ssl_enforced\":\\s*(?P<rds_ssl_enforced>\\d+)",
          "logic": "IF rds_total == rds_ssl_enforced THEN PASS"
        }
      ]
    },
    "aws_config_conformance_packs": {
      "id": "EVD-CONFIG-PACKS",
      "name": "AWS Config Conformance Packs",
      "description": "Evidence for AWS Config conformance pack compliance and rule evaluations",
      "service": "AWS",
      "instructions": "Script: aws_config_conformance_packs.sh. Commands executed: aws configservice describe-conformance-packs, aws configservice describe-conformance-pack-status, aws configservice get-conformance-pack-compliance-summary, aws configservice get-conformance-pack-compliance-details",
      "validationRules": []
    },
    "aws_config_monitoring": {
      "id": "EVD-CONFIG-MONITORING",
      "name": "AWS Config Monitoring",
      "description": "Evidence for AWS Config service monitoring and recording status",
      "service": "AWS",
      "instructions": "Script: aws_config_monitoring.sh. Commands executed: aws configservice describe-configuration-recorders, aws configservice describe-configuration-recorder-status, aws configservice describe-delivery-channels",
      "validationRules": []
    },
    "block_storage_encryption_status": {
      "id": "EVD-BLOCK-ENC",
      "name": "Block Storage Encryption",
      "description": "Evidence for EBS volume encryption status and configurations",
      "service": "AWS",
      "instructions": "Script: block_storage_encryption_status.sh. Commands executed: aws ec2 get-ebs-encryption-by-default, aws ec2 get-ebs-default-kms-key-id, aws ec2 describe-volumes, aws efs describe-file-systems",
      "validationRules": [
        "\"Encrypted\":\\s*true"
      ]
    },
    "eks_high_availability": {
      "id": "EVD-EKS-HA",
      "name": "EKS High Availability",
      "description": "Evidence for EKS cluster high availability configurations",
      "service": "AWS",
      "instructions": "Script: eks_high_availability.sh. Commands executed: aws eks list-clusters, aws eks describe-cluster, aws eks list-nodegroups, aws eks describe-nodegroup",
      "validationRules": []
    },
    "guard_duty": {
      "id": "EVD-GUARD-DUTY",
      "name": "GuardDuty Configuration",
      "description": "Evidence for GuardDuty threat detection configuration",
      "service": "AWS",
      "instructions": "Script: guard_duty.sh. Commands executed: aws guardduty list-detectors, aws guardduty get-detector, aws guardduty get-findings",
      "validationRules": []
    },
    "iam_identity_center": {
      "id": "EVD-IAM-IDENTITY-CENTER",
      "name": "IAM Identity Center",
      "description": "Evidence for IAM Identity Center configurations",
      "service": "AWS",
      "instructions": "Script: iam_identity_center.sh. Commands executed: aws sso-admin list-instances, aws sso-admin list-permission-sets",
      "validationRules": []
    },
    "kms_key_rotation": {
      "id": "EVD-KMS-ROT",
      "name": "KMS Key Rotation",
      "description": "Evidence for KMS key rotation policies and status",
      "service": "AWS",
      "instructions": "Script: kms_key_rotation.sh. Commands executed: aws kms list-keys, aws kms describe-key, aws kms get-key-rotation-status",
      "validationRules": []
    },
    "load_balancer_encryption_status": {
      "id": "EVD-LB-ENC-STATUS",
      "name": "Load Balancer Encryption Status",
      "description": "Evidence for load balancer encryption configurations and SSL policies",
      "service": "AWS",
      "instructions": "Script: load_balancer_encryption_status.sh. Commands executed: aws elbv2 describe-load-balancers, aws elbv2 describe-listeners",
      "validationRules": [
        "\"encrypted\":\\s*true"
      ]
    },
    "s3_encryption_status": {
      "id": "EVD-S3-ENC",
      "name": "S3 Encryption",
      "description": "Evidence for S3 bucket encryption configurations and policies",
      "service": "AWS",
      "instructions": "Script: s3_encryption_status.sh. Commands executed: aws s3api list-buckets, aws s3api get-bucket-encryption",
      "validationRules": [
        "\"ServerSideEncryptionConfiguration\"",
        "\"ApplyServerSideEncryptionByDefault\""
      ]
    },
    "role_specific_training": {
      "id": "EVD-ROLE-SPECIFIC-TRAINING",
      "name": "Role Specific Training",
      "description": "Evidence for role-specific training compliance and completion status",
      "service": "KNOWBE4",
      "instructions": "Script: role_specific_training.sh. Commands executed: KnowBe4 API calls for role-specific training data",
      "validationRules": []
    },
    "security_awareness_training": {
      "id": "EVD-SECURITY-AWARENESS-TRAINING",
      "name": "Security Awareness Training",
      "description": "Evidence for security awareness training compliance and user completion status",
      "service": "KNOWBE4",
      "instructions": "Script: security_awareness_training.sh. Commands executed: KnowBe4 API calls for user training data and enrollments",
      "validationRules": []
    }
  }
}